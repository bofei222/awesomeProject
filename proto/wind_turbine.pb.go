// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.2
// source: wind_turbine.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WindTurbineData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64     `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	FloatData []float32 `protobuf:"fixed32,2,rep,packed,name=floatData,proto3" json:"floatData,omitempty"`
	BoolData  []bool    `protobuf:"varint,3,rep,packed,name=boolData,proto3" json:"boolData,omitempty"`
	TurbineID string    `protobuf:"bytes,4,opt,name=turbineID,proto3" json:"turbineID,omitempty"`
}

func (x *WindTurbineData) Reset() {
	*x = WindTurbineData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wind_turbine_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WindTurbineData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WindTurbineData) ProtoMessage() {}

func (x *WindTurbineData) ProtoReflect() protoreflect.Message {
	mi := &file_wind_turbine_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WindTurbineData.ProtoReflect.Descriptor instead.
func (*WindTurbineData) Descriptor() ([]byte, []int) {
	return file_wind_turbine_proto_rawDescGZIP(), []int{0}
}

func (x *WindTurbineData) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *WindTurbineData) GetFloatData() []float32 {
	if x != nil {
		return x.FloatData
	}
	return nil
}

func (x *WindTurbineData) GetBoolData() []bool {
	if x != nil {
		return x.BoolData
	}
	return nil
}

func (x *WindTurbineData) GetTurbineID() string {
	if x != nil {
		return x.TurbineID
	}
	return ""
}

type WriteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *WriteResponse) Reset() {
	*x = WriteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wind_turbine_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteResponse) ProtoMessage() {}

func (x *WriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wind_turbine_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteResponse.ProtoReflect.Descriptor instead.
func (*WriteResponse) Descriptor() ([]byte, []int) {
	return file_wind_turbine_proto_rawDescGZIP(), []int{1}
}

func (x *WriteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type WindTurbineAverageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TurbineID string `protobuf:"bytes,1,opt,name=turbineID,proto3" json:"turbineID,omitempty"`
}

func (x *WindTurbineAverageRequest) Reset() {
	*x = WindTurbineAverageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wind_turbine_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WindTurbineAverageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WindTurbineAverageRequest) ProtoMessage() {}

func (x *WindTurbineAverageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wind_turbine_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WindTurbineAverageRequest.ProtoReflect.Descriptor instead.
func (*WindTurbineAverageRequest) Descriptor() ([]byte, []int) {
	return file_wind_turbine_proto_rawDescGZIP(), []int{2}
}

func (x *WindTurbineAverageRequest) GetTurbineID() string {
	if x != nil {
		return x.TurbineID
	}
	return ""
}

type WindTurbineAverageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Average float32 `protobuf:"fixed32,1,opt,name=average,proto3" json:"average,omitempty"`
}

func (x *WindTurbineAverageResponse) Reset() {
	*x = WindTurbineAverageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wind_turbine_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WindTurbineAverageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WindTurbineAverageResponse) ProtoMessage() {}

func (x *WindTurbineAverageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wind_turbine_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WindTurbineAverageResponse.ProtoReflect.Descriptor instead.
func (*WindTurbineAverageResponse) Descriptor() ([]byte, []int) {
	return file_wind_turbine_proto_rawDescGZIP(), []int{3}
}

func (x *WindTurbineAverageResponse) GetAverage() float32 {
	if x != nil {
		return x.Average
	}
	return 0
}

type AllWindTurbinesAverageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AllWindTurbinesAverageRequest) Reset() {
	*x = AllWindTurbinesAverageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wind_turbine_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllWindTurbinesAverageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllWindTurbinesAverageRequest) ProtoMessage() {}

func (x *AllWindTurbinesAverageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wind_turbine_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllWindTurbinesAverageRequest.ProtoReflect.Descriptor instead.
func (*AllWindTurbinesAverageRequest) Descriptor() ([]byte, []int) {
	return file_wind_turbine_proto_rawDescGZIP(), []int{4}
}

type WindTurbinesAverageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Average float32 `protobuf:"fixed32,1,opt,name=average,proto3" json:"average,omitempty"`
}

func (x *WindTurbinesAverageResponse) Reset() {
	*x = WindTurbinesAverageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wind_turbine_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WindTurbinesAverageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WindTurbinesAverageResponse) ProtoMessage() {}

func (x *WindTurbinesAverageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wind_turbine_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WindTurbinesAverageResponse.ProtoReflect.Descriptor instead.
func (*WindTurbinesAverageResponse) Descriptor() ([]byte, []int) {
	return file_wind_turbine_proto_rawDescGZIP(), []int{5}
}

func (x *WindTurbinesAverageResponse) GetAverage() float32 {
	if x != nil {
		return x.Average
	}
	return 0
}

var File_wind_turbine_proto protoreflect.FileDescriptor

var file_wind_turbine_proto_rawDesc = []byte{
	0x0a, 0x12, 0x77, 0x69, 0x6e, 0x64, 0x5f, 0x74, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x01, 0x0a, 0x0f,
	0x57, 0x69, 0x6e, 0x64, 0x54, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a,
	0x09, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02,
	0x52, 0x09, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x62,
	0x6f, 0x6f, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x08, 0x52, 0x08, 0x62,
	0x6f, 0x6f, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x75, 0x72, 0x62, 0x69,
	0x6e, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x75, 0x72, 0x62,
	0x69, 0x6e, 0x65, 0x49, 0x44, 0x22, 0x29, 0x0a, 0x0d, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x39, 0x0a, 0x19, 0x57, 0x69, 0x6e, 0x64, 0x54, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x65, 0x41,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x22, 0x36, 0x0a, 0x1a, 0x57,
	0x69, 0x6e, 0x64, 0x54, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x65, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x61, 0x76, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x22, 0x1f, 0x0a, 0x1d, 0x41, 0x6c, 0x6c, 0x57, 0x69, 0x6e, 0x64, 0x54, 0x75,
	0x72, 0x62, 0x69, 0x6e, 0x65, 0x73, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x37, 0x0a, 0x1b, 0x57, 0x69, 0x6e, 0x64, 0x54, 0x75, 0x72, 0x62,
	0x69, 0x6e, 0x65, 0x73, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x32, 0x93, 0x02,
	0x0a, 0x12, 0x57, 0x69, 0x6e, 0x64, 0x54, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x6e, 0x64, 0x54, 0x75, 0x72,
	0x62, 0x69, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x54, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x65,
	0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x57, 0x69, 0x6e, 0x64, 0x54, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x65, 0x41, 0x76, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x57, 0x69, 0x6e, 0x64, 0x54, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x65, 0x41, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x57, 0x69, 0x6e, 0x64, 0x54, 0x75, 0x72, 0x62, 0x69, 0x6e,
	0x65, 0x73, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x6c, 0x6c, 0x57, 0x69, 0x6e, 0x64, 0x54, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x65,
	0x73, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x6e, 0x64, 0x54, 0x75, 0x72, 0x62,
	0x69, 0x6e, 0x65, 0x73, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wind_turbine_proto_rawDescOnce sync.Once
	file_wind_turbine_proto_rawDescData = file_wind_turbine_proto_rawDesc
)

func file_wind_turbine_proto_rawDescGZIP() []byte {
	file_wind_turbine_proto_rawDescOnce.Do(func() {
		file_wind_turbine_proto_rawDescData = protoimpl.X.CompressGZIP(file_wind_turbine_proto_rawDescData)
	})
	return file_wind_turbine_proto_rawDescData
}

var file_wind_turbine_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_wind_turbine_proto_goTypes = []interface{}{
	(*WindTurbineData)(nil),               // 0: proto.WindTurbineData
	(*WriteResponse)(nil),                 // 1: proto.WriteResponse
	(*WindTurbineAverageRequest)(nil),     // 2: proto.WindTurbineAverageRequest
	(*WindTurbineAverageResponse)(nil),    // 3: proto.WindTurbineAverageResponse
	(*AllWindTurbinesAverageRequest)(nil), // 4: proto.AllWindTurbinesAverageRequest
	(*WindTurbinesAverageResponse)(nil),   // 5: proto.WindTurbinesAverageResponse
}
var file_wind_turbine_proto_depIdxs = []int32{
	0, // 0: proto.WindTurbineService.SendData:input_type -> proto.WindTurbineData
	2, // 1: proto.WindTurbineService.GetWindTurbineAverage:input_type -> proto.WindTurbineAverageRequest
	4, // 2: proto.WindTurbineService.GetAllWindTurbinesAverage:input_type -> proto.AllWindTurbinesAverageRequest
	1, // 3: proto.WindTurbineService.SendData:output_type -> proto.WriteResponse
	3, // 4: proto.WindTurbineService.GetWindTurbineAverage:output_type -> proto.WindTurbineAverageResponse
	5, // 5: proto.WindTurbineService.GetAllWindTurbinesAverage:output_type -> proto.WindTurbinesAverageResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_wind_turbine_proto_init() }
func file_wind_turbine_proto_init() {
	if File_wind_turbine_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wind_turbine_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WindTurbineData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wind_turbine_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wind_turbine_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WindTurbineAverageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wind_turbine_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WindTurbineAverageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wind_turbine_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllWindTurbinesAverageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wind_turbine_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WindTurbinesAverageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wind_turbine_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wind_turbine_proto_goTypes,
		DependencyIndexes: file_wind_turbine_proto_depIdxs,
		MessageInfos:      file_wind_turbine_proto_msgTypes,
	}.Build()
	File_wind_turbine_proto = out.File
	file_wind_turbine_proto_rawDesc = nil
	file_wind_turbine_proto_goTypes = nil
	file_wind_turbine_proto_depIdxs = nil
}
